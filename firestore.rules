rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own documents
    match /users/{userId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == userId || isStaff());
    }
    
    // Emergency alerts - critical access for staff
    match /emergency_alerts/{alertId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth != null && isStaff();
    }
    
    // Resources - public read access, staff write access
    match /resources/{resourceId} {
      allow read: if true; // Public access for finding help
      allow write: if request.auth != null && isStaff();
    }
    
    // Support groups - members and staff access
    match /support_groups/{groupId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (isStaff() || isMember(groupId));
    }
    
    // Cases - staff and assigned user access only
    match /cases/{caseId} {
      allow read, write: if request.auth != null && 
        (isStaff() || request.auth.uid == resource.data.userId);
    }
    
    // Helper functions
    function isStaff() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType in ['admin', 'counselor'];
    }
    
    function isAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin';
    }
    
    function isMember(groupId) {
      return request.auth != null && 
        request.auth.uid in get(/databases/$(database)/documents/support_groups/$(groupId)).data.members;
    }
  }
}